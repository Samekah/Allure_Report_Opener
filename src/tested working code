	new ProcessBuilder("wt","-d .", "-p", "Command Prompt","cmd", "/k", "start cmd.exe", ";", "nt", "-p", "PowerShell").start();

	";", "nt", "-p", "PowerShell"

    private static String defaultDirectory = "C:\\Users\\HOWARS19\\projects\\Allure_Report_Opener"+ File.separator + "Allure Reports";

    String command = "\""+ uz.getDefaultDirectory() + File.separator + directoryName + File.separator + "target\\site\\allure-maven-plugin\"";

    new ProcessBuilder("wt","-d .", "-p", "Command Prompt","cmd", "/k", "allure", "open", command).start();

	check for use with mac:
	new ProcessBuilder("open", "-a", "Terminal", "--args", "bash", "-c", "echo 'Hello from Terminal'; exec bash").start();

    new ProcessBuilder("cmd.exe", "/c", "start cmd.exe").start().waitFor();
    //		new ProcessBuilder("wt","-p", "Command Prompt","/c start cmd.exe" ).start().waitFor();


    Process process = pb.start();
    		ec = process.waitFor();
    		System.out.println(ec);

    		parentPid = process.pid();
    		System.out.println(parentPid);
    		System.out.println(process.children().count());

    		process.children().forEach(child -> {
    			System.out.println("Child PID: " + child.pid());
    			try {
    				if(ec==0) {
    					Process test = new ProcessBuilder("taskkill", "/f", "/PID", "" + child.pid()).start();
    					try (BufferedReader reader = new BufferedReader(new InputStreamReader(test.getInputStream()))) {
    						String line;
    						while ((line = reader.readLine()) != null) {
    							System.out.println(line);
    						}
    					}
    					try (BufferedReader reader = new BufferedReader(new InputStreamReader(test.getErrorStream()))) {
    						String line;
    						while ((line = reader.readLine()) != null) {
    							System.err.println(line);
    						}
    					}
    				}
    			} catch (IOException e) {
    				throw new RuntimeException(e);
    			}
    		});


new ProcessBuilder("wt", "-w 0", "-d .","nt", "-p", "PowerShell");

*** code explination
Arguments explained:

"taskkill": This is a Windows command used to terminate tasks/processes by their name or process ID.
"/F": This flag forces the termination of the specified process, essentially meaning "forcefully kill the process."
"/IM": This flag specifies that the following argument is the image name of the process to be terminated.
"cmd.exe": This is the process name that taskkill will try to terminate. cmd.exe represents the Windows Command Prompt.
.start(): This starts the Process by invoking the command specified in the ProcessBuilder. In this case, it triggers the execution of taskkill to terminate all instances of cmd.exe.

**give link a look**
https://howtodoinjava.com/java/io/how-to-check-if-file-exists-in-java/#:~:text=To%20test%20to%20see%20if,and%20otherwise%20does%20not%20exists.